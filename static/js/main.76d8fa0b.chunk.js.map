{"version":3,"sources":["Components/Parts/DefaultGraphs.js","Components/Parts/WorldWide.js","Views/Default.js","Views/About.js","Views/Loading.js","Views/FindCountry.js","Views/Compare.js","App.js","reportWebVitals.js","index.js"],"names":["colors","DefaultGraphs","props","chartTheme","axis","style","tickLabels","fill","Container","fluid","backgroundColor","alignSelf","Row","Col","width","alignContent","marginTop","Card","className","Body","Title","Subtitle","data","home_data","Name","padding","animate","easing","duration","x","y","height","labels","fontSize","fillOpacity","colorScale","innerRadius","theme","Text","color","Link","href","global_data","region_data","map","x1","marginRight","this","orientation","pointerLength","cornerRadius","flyoutWidth","flyoutHeight","flyoutStyle","React","Component","defaultEvents","VictoryTooltip","Worldwide","deaths","cases","forEach","element","console","log","push","newData","domainPadding","i","dependentAxis","tickFormat","tick","Default","About","Loading","class","FindCountry","state","Countries","fetch","process","then","res","ok","json","setState","countries","Button","variant","margin","onClick","action","Compare","SelectedCountries","arg","previouslySelectedCountries","xs","borderColor","ListGroup","Item","listClick","marginBottom","Header","as","Table","striped","bordered","hover","country","index","left","bottom","right","offset","App","handler","bind","View","Data","Home","handleAboutClick","handleCreateClick","handleHomeClick","handleSetHomeClick","handleCompareClick","setTimeout","destination","ui","Navbar","Brand","Nav","paddingRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d8fa0b.chunk.js","sourcesContent":["import React from 'react';\n\n// Import Boootstrap components:\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\n// Import victory charts:\nimport { VictoryPie } from 'victory';\n\n// For all of the chart colors.\nconst colors = [\n    [ '#388087', '#6fb3b8' ],\n    [ '#5D7529', '#DBF7A0' ],\n    [ '#36752E', '#B3F7AA' ],\n    [ '#317546', '#B1F7C6' ],\n    [ '#2F745D', '#AFF7DF' ],\n    [ '#347175', '#B6F2F7' ],\n    [ '#374775', '#BECCF7' ],\n    [ '#4C3374', '#CFB6F7' ],\n    [ '#603074', '#E1AFF7' ],\n    [ '#75276F', '#F79BEF' ],\n    [ '#751930', '#F77E9C' ],\n    [ '#751D17', '#F7837B' ],\n    [ '#75311A', '#F79E80' ],\n    [ '#754E1D', '#F7C588' ],\n    [ '#755419', '#F7CA7E' ],\n    [ '#746337', '#F7E6BE' ],\n    [ '#756D1B', '#F7ED83' ],\n    [ '#A8608E', '#E1FFDE' ],\n    [ '#A87060', '#DEFFF6' ],\n    [ '#A88560', '#DEF6FF' ],\n    [ '#A89F60', '#E3DEFF' ],\n    [ '#60A8A1', '#FFE8DE' ],\n    [ '#6079A8', '#FFF5DE' ],\n    [ '#357C8F', '#F96B64' ],\n    [ '#37358F', '#F9A54F' ],\n    [ '#82358F', '#F9E272' ],\n    [ '#8F5435', '#76FA85' ],\n    [ '#906C35', '#74F6C4' ],\n    [ '#388087', '#6fb3b8' ],\n    [ '#5D7529', '#DBF7A0' ],\n    [ '#36752E', '#B3F7AA' ],\n    [ '#317546', '#B1F7C6' ],\n    [ '#2F745D', '#AFF7DF' ],\n    [ '#347175', '#B6F2F7' ],\n    [ '#374775', '#BECCF7' ],\n    [ '#4C3374', '#CFB6F7' ],\n    [ '#603074', '#E1AFF7' ],\n    [ '#75276F', '#F79BEF' ],\n    [ '#751930', '#F77E9C' ],\n    [ '#751D17', '#F7837B' ],\n    [ '#75311A', '#F79E80' ],\n    [ '#754E1D', '#F7C588' ],\n    [ '#755419', '#F7CA7E' ],\n    [ '#746337', '#F7E6BE' ],\n    [ '#756D1B', '#F7ED83' ],\n    [ '#A8608E', '#E1FFDE' ],\n    [ '#A87060', '#DEFFF6' ],\n    [ '#A88560', '#DEF6FF' ],\n    [ '#A89F60', '#E3DEFF' ],\n    [ '#60A8A1', '#FFE8DE' ],\n    [ '#6079A8', '#FFF5DE' ],\n    [ '#357C8F', '#F96B64' ],\n    [ '#37358F', '#F9A54F' ],\n    [ '#82358F', '#F9E272' ],\n    [ '#8F5435', '#76FA85' ],\n    [ '#906C35', '#74F6C4' ]\n]\n\nconst DefaultGraphs = (props) => {\n\n    const chartTheme = {\n        axis: {\n          style: {\n            tickLabels: {\n              // this changed the color of my numbers to white\n              fill: 'white',\n            },\n          },\n        },\n      };\n\n    return (\n        <Container fluid style={{ backgroundColor: '#293742', alignSelf: 'center'}}>\n            <Row>\n                <Col>\n                    <div style={\n                        {\n                            width: '20rem', \n                            backgroundColor: '#293742', \n                            alignContent: 'center',\n                            marginTop: '10px' \n                        }\n                    }>\n                        <Card className='text-white' style={{ width: '20rem', backgroundColor:  '#202B33'}}>\n                            <Card.Body>\n                                <Card.Title>Deaths / Recoveries</Card.Title>\n                                <Card.Subtitle className='mb-2 text-muted'>{props.data.home_data.Name}</Card.Subtitle>\n                                <Card.Body style={{ padding: '2px'}}>\n                                {/* <Graph>{ this.props.type }</Graph> */}\n                                    {/* <VictoryChart\n                                        // adding the material theme provided with Victory\n                                        theme={VictoryTheme.material}\n                                    > */}\n                                        \n                                    <VictoryPie \n                                        animate={{ easing: 'exp', duration: 1000 }} \n                                        data={[\n                                            { x: 'Deaths', y: props.data.home_data[\"Deaths - cumulative total\"]},\n                                            { x: 'Cases', y: props.data.home_data[\"Cases - cumulative total\"] }\n                                        ]} \n                                        width={250} \n                                        height={250}\n                                        style={{ \n                                            labels: { fontSize: 12, fill: \"white\"},\n                                            data: {\n                                                fillOpacity: 1\n                                            }\n                                        }}\n                                        colorScale={colors[0]} \n                                        innerRadius={50} \n                                        theme={chartTheme}\n                                    />\n                                    {/* </VictoryChart> */}\n                                </Card.Body>\n                                <Card.Text>\n                                    <p>Death and recoveries for the country</p>\n                                    <h6 color='#388087'>Deaths: {props.data.home_data[\"Deaths - cumulative total\"]}</h6>\n                                    <h6 color='#6fb3b8'>Cases: {props.data.home_data[\"Cases - cumulative total\"]}</h6>\n                                </Card.Text>\n                                <Card.Link href='#'>Enlarge</Card.Link>\n                                <Card.Link href='#'>Edit</Card.Link>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </Col>\n                <Col>\n                <div style={\n                        {\n                            width: '20rem', \n                            backgroundColor: '#293742', \n                            alignContent: 'center',\n                            marginTop: '10px' \n                        }\n                    }>\n                        <Card className='text-white' style={{ width: '20rem', backgroundColor:  '#202B33'}}>\n                            <Card.Body>\n                                <Card.Title>Global Deaths / Cases / Population </Card.Title>\n                                <Card.Subtitle className='mb-2 text-muted'>Global</Card.Subtitle>\n                                <Card.Body style={{ padding: '2px'}}>\n                                {/* <Graph>{ this.props.type }</Graph> */}\n                                    {/* <VictoryChart\n                                        // adding the material theme provided with Victory\n                                        theme={VictoryTheme.material}\n                                    > */}\n                                        \n                                    <VictoryPie \n                                        animate={{ easing: 'exp', duration: 1000 }} \n                                        data={[\n                                            { x: 'Deaths', y: props.data.global_data[\"Deaths - cumulative total\"]},\n                                            { x: 'Cases', y: props.data.global_data[\"Cases - cumulative total\"] }\n                                        ]} \n                                        width={250} \n                                        height={250}\n                                        style={{ \n                                            labels: { fontSize: 12, fill: \"white\"},\n                                            data: {\n                                                fillOpacity: 1\n                                            }\n                                        }}\n                                        colorScale={colors[0]} \n                                        innerRadius={50} \n                                        theme={chartTheme}\n                                    />\n                                    {/* </VictoryChart> */}\n                                </Card.Body>\n                                <Card.Text>\n                                    <p>Death and recoveries for the country</p>\n                                    <h6 color='#388087'>Deaths: {props.data.home_data[\"Deaths - cumulative total\"]}</h6>\n                                    <h6 color='#6fb3b8'>Cases: {props.data.home_data[\"Cases - cumulative total\"]}</h6>\n                                </Card.Text>\n                                <Card.Link href='#'>Enlarge</Card.Link>\n                                <Card.Link href='#'>Edit</Card.Link>\n                            </Card.Body>\n                        </Card>\n                    </div>    \n                </Col>\n                <Row>\n                    <Col>\n                        <h2>All countries data within home region:</h2>\n                    </Col>\n                </Row>\n                {\n                    props.data.region_data.map((x, x1) => {\n                        return (\n                            <Col>\n                                <div style={{\n                                    width: '20rem', \n                                    backgroundColor: '#293742', \n                                    alignContent: 'center', \n                                    marginRight: '10px', \n                                    marginTop: '10px' \n                                }}>\n                                    <Card className='text-white' style={{ width: '20rem', backgroundColor:  '#202B33'}}>\n                                        <Card.Body>\n                                            <Card.Title>{x.Name}</Card.Title>\n                                            <Card.Subtitle className='mb-2 text-muted'>Deaths / Cases</Card.Subtitle>\n                                            <Card.Body style={{ padding: '2px'}}>\n                                            <VictoryPie \n                                                animate={{ easing: 'exp', duration: 1000 }} \n                                                data={[\n                                                    { x: 'Deaths', y: x[\"Deaths - cumulative total\"]},\n                                                    { x: 'Cases', y: x[\"Cases - cumulative total\"] }\n                                                ]} \n                                                width={250} \n                                                height={250}\n                                                style={{ \n                                                    labels: { fontSize: 12, fill: \"white\"},\n                                                    data: {\n                                                        fillOpacity: 1\n                                                    }\n                                                }}\n                                                colorScale={colors[x1]} \n                                                innerRadius={50} \n                                                theme={chartTheme}\n                                            />\n                                                \n                                            </Card.Body>\n                                            <Card.Text>\n                                                <h4>Cases: { x[\"Cases - cumulative total\"] }</h4>\n                                                <h4>Deaths: { x[\"Deaths - cumulative total\"] }</h4>\n                                            </Card.Text>\n                                            <Card.Link href='#'>Enlarge</Card.Link>\n                                            <Card.Link href='#'>Edit</Card.Link>\n                                        </Card.Body>\n                                    </Card>\n                                </div>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default DefaultGraphs;\n","import React from 'react';\n\n// Import Boootstrap components:\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\n\n// Import Victory:\nimport { \n    VictoryChart,\n    VictoryTooltip, \n    VictoryLabel,\n    VictoryBar,\n    VictoryAxis,\n    VictoryStack\n} from 'victory';\n\nclass CustomLabel extends React.Component {\n    render() {\n      return (\n        <g>\n          <VictoryLabel {...this.props}/>\n          <VictoryTooltip\n            {...this.props}\n            x={200} y={250}\n            orientation=\"top\"\n            pointerLength={0}\n            cornerRadius={50}\n            flyoutWidth={100}\n            flyoutHeight={100}\n            flyoutStyle={{ fill: \"black\" }}\n          />\n        </g>\n      );\n    }\n  }\n  \n  CustomLabel.defaultEvents = VictoryTooltip.defaultEvents;\n\n\n\nconst Worldwide = (props) => {\n\n    let deaths = [];\n    let cases = [];\n\n    props.data.region_data.forEach(element => {\n        console.log(element.Name);\n        console.log(element[\"Cases - cumulative total\"]);\n\n        deaths.push({ x: element.Name, y: element[\"Deaths - cumulative total\"]});\n        \n    });\n\n    props.data.region_data.forEach(element => {\n        cases.push({ x: element.Name, y: element[\"Cases - cumulative total\"]});\n    });\n\n    console.log(deaths);\n    console.log(cases);\n\n    let newData = [deaths, cases];\n    console.log(newData);\n\n    const myDataset = [\n        [\n            { x: \"england\", y: 1 },\n            { x: \"scotland\", y: 2 },\n            { x: \"ireland\", y: 3 },\n            { x: \"france\", y: 2 },\n            { x: \"spain\", y: 1 }\n        ],[\n            { x: \"england\", y: 5 },\n            { x: \"scotland\", y: 8 },\n            { x: \"ireland\", y: 5 },\n            { x: \"france\", y: 9 },\n            { x: \"spain\", y: 20 }\n        ]\n        \n    ];\n\n    return (\n        <Container fluid style={{padding: '10px', backgroundColor: '#293742', alignSelf: 'center'}}>\n            <div style={\n                {\n                    width: '30rem', \n                    backgroundColor: '#293742', \n                }  \n            }>\n                <Card  className='text-white' style={{ backgroundColor: '#202B33', width: '500px'}}>\n                    <Card.Body>\n                        <Card.Title>Population / Infecfcted / Deaths</Card.Title>\n                        <Card.Subtitle className='mb-2 text-muted'>World Wide</Card.Subtitle>\n                        <Card.Body style={{ padding: '2px'}}>\n                            {/* <VictoryChart width={400} height={400} animate={1000}>\n                                \n                            </VictoryChart> */}\n                            {/* <VictoryPie\n                                style={{ labels: { fill: \"white\" } }}\n                                innerRadius={100}\n                                labelRadius={120}\n                                labels={({ datum }) => `# ${datum.x}`}\n                                labelComponent={<CustomLabel />}\n                                data={data}\n                            /> */}\n                            <VictoryChart height={400} width={400}\n                                domainPadding={{ x: 30, y: 20 }} \n                            >\n                                <VictoryStack\n                                colorScale={[\"blue\", \"tomato\"]}\n                                >\n                                {newData.map((data, i) => {\n                                    return <VictoryBar data={data} key={i}/>;\n                                })}\n                                </VictoryStack>\n                                <VictoryAxis dependentAxis\n                                tickFormat={(tick) => `${tick}%`}\n                                />\n                                <VictoryAxis\n                                tickFormat={[\"a\", \"b\", \"c\", \"d\", \"e\"]}\n                                />\n                            </VictoryChart>\n                        </Card.Body>\n                        <Card.Text>\n                        Some quick example text incase \n                        the user may want to put notes here. \n                        This feature can easily be taken out \n                        but I implemented it just incase we had \n                        a use for it.\n                        </Card.Text>\n                        <Card.Link href='#'>Enlarge</Card.Link>\n                        <Card.Link href='#'>Edit</Card.Link>\n                    </Card.Body>\n                </Card>\n            </div>\n        </Container>\n    );\n}\n\nexport default Worldwide;\n\n\n  \n  \n","\nimport React, { Component } from 'react'; // Import React.\n\n// Import Bootstrap Components: (Import each component ont at a time to save space).\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\n// Import My Components:\nimport DefaultGraphs from '../Components/Parts/DefaultGraphs';\nimport Worldwide from '../Components/Parts/WorldWide';\n\nclass Default extends Component {\n\tconstructor(props) {\n\t\tsuper (props);\n\t}\n    render() {\n        return (\n            <Container fluid style={{padding: '5px', backgroundColor: '#293742', alignSelf: 'center'}}>\n\t\t\t\t<Row style={{ width: '100%'}}>\n\t\t\t\t\t{/* <Col>\n\t\t\t\t\t\t<Worldwide />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</Col> */}\n\t\t\t\t\t{/* <Col>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<DefaultGraphs data={this.props.data}/>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col> */}\n\t\t\t\t\t<DefaultGraphs style={{ alignSelf: 'center' }} data={this.props.data}/>\n\t\t\t\t</Row>\n\t\t\t\t<Worldwide style={{width: '90%'}} data={this.props.data}/>\n\t\t\t</Container>\n        );\n    }\n}\n\nexport default Default;","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\n\nfunction About() {\n    return (\n        <Container>\n            <h1>G34 Covid Analyser</h1>\n            <Card className='text-white' style={{ width: '20rem', backgroundColor:  '#202B33'}}>\n                <Card.Title>\n                    How to install for development\n                </Card.Title>\n                <Card.Body>\n                    <h3>Front End:</h3>\n                    <p>Go to repo in terminal. \n                        Then go to the g34-covid-analyser folder.\n                        Then run 'npm instal'\n                    </p>\n                </Card.Body>\n            </Card>\n        </Container>\n    );\n}\n\nexport default About;\n\n","// Import CSS.\nimport '../Styles/Loading.css';\n\n// Import React.\nimport React, { Componeent } from 'react';\n\nconst Loading = () => {\n\n    return (\n        <>\n            <div class=\"loader\">\n                <div class=\"loader-inner\">\n                    <div class=\"loader-line-wrap\">\n                    <div class=\"loader-line\"></div>\n                    </div>\n                    <div class=\"loader-line-wrap\">\n                    <div class=\"loader-line\"></div>\n                    </div>\n                    <div class=\"loader-line-wrap\">\n                    <div class=\"loader-line\"></div>\n                    </div>\n                    <div class=\"loader-line-wrap\">\n                    <div class=\"loader-line\"></div>\n                    </div>\n                    <div class=\"loader-line-wrap\">\n                    <div class=\"loader-line\"></div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Loading;","\nimport React from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\n\n// Create a view where the user can select the country they're from.\nclass FindCountry extends React.Component {\n    \n    constructor(props) {\n        super (props);\n        this.state = { Countries: ['none'] };\n    }\n    \n    componentDidMount() { //Runs after the component has been mounted\n        fetch(`${process.env.REACT_APP_API_LOC}/who-countries`).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n        }).then(data => {\n            this.setState(state => ({\n                Countries: data.countries\n            }));\n        });\n    }\n\n    render() {\n        console.log(this.state.Countries);\n        return(\n            <div>\n                <h1>Select Which Country You're From</h1>   \n                <Container>\n                    {\n                        this.state.Countries.map((x) => {\n                            return <Button variant=\"info\" style={{ margin: '10px' }} onClick={() => { this.props.action(x) }}>{x}</Button>\n                        })\n                    }\n                </Container>\n            </div>\n        );\n    }    \n}\n\nexport default FindCountry;\n","import '../Styles/Compare.css';\n\nimport React, { Component } from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table'; \n\nimport {\n    VictoryChart,\n    VictoryGroup,\n    VictoryBar\n} from 'victory';\n\n\n\nclass Compare extends Component {\n\n    constructor(props) {\n        super (props);\n\n        this.state = { Countries: ['none'], SelectedCountries: [] };\n\n        \n        // For all of the chart colors.\n        this.colors = [\n            [ '#388087', '#6fb3b8' ],\n            [ '#5D7529', '#DBF7A0' ],\n            [ '#36752E', '#B3F7AA' ],\n            [ '#317546', '#B1F7C6' ],\n            [ '#2F745D', '#AFF7DF' ],\n            [ '#347175', '#B6F2F7' ],\n            [ '#374775', '#BECCF7' ],\n            [ '#4C3374', '#CFB6F7' ],\n            [ '#603074', '#E1AFF7' ],\n            [ '#75276F', '#F79BEF' ],\n            [ '#751930', '#F77E9C' ],\n            [ '#751D17', '#F7837B' ],\n            [ '#75311A', '#F79E80' ],\n            [ '#754E1D', '#F7C588' ],\n            [ '#755419', '#F7CA7E' ],\n            [ '#746337', '#F7E6BE' ],\n            [ '#756D1B', '#F7ED83' ],\n            [ '#A8608E', '#E1FFDE' ],\n            [ '#A87060', '#DEFFF6' ],\n            [ '#A88560', '#DEF6FF' ],\n            [ '#A89F60', '#E3DEFF' ],\n            [ '#60A8A1', '#FFE8DE' ],\n            [ '#6079A8', '#FFF5DE' ],\n            [ '#357C8F', '#F96B64' ],\n            [ '#37358F', '#F9A54F' ],\n            [ '#82358F', '#F9E272' ],\n            [ '#8F5435', '#76FA85' ],\n            [ '#906C35', '#74F6C4' ],\n            [ '#388087', '#6fb3b8' ],\n            [ '#5D7529', '#DBF7A0' ],\n            [ '#36752E', '#B3F7AA' ],\n            [ '#317546', '#B1F7C6' ],\n            [ '#2F745D', '#AFF7DF' ],\n            [ '#347175', '#B6F2F7' ],\n            [ '#374775', '#BECCF7' ],\n            [ '#4C3374', '#CFB6F7' ],\n            [ '#603074', '#E1AFF7' ],\n            [ '#75276F', '#F79BEF' ],\n            [ '#751930', '#F77E9C' ],\n            [ '#751D17', '#F7837B' ],\n            [ '#75311A', '#F79E80' ],\n            [ '#754E1D', '#F7C588' ],\n            [ '#755419', '#F7CA7E' ],\n            [ '#746337', '#F7E6BE' ],\n            [ '#756D1B', '#F7ED83' ],\n            [ '#A8608E', '#E1FFDE' ],\n            [ '#A87060', '#DEFFF6' ],\n            [ '#A88560', '#DEF6FF' ],\n            [ '#A89F60', '#E3DEFF' ],\n            [ '#60A8A1', '#FFE8DE' ],\n            [ '#6079A8', '#FFF5DE' ],\n            [ '#357C8F', '#F96B64' ],\n            [ '#37358F', '#F9A54F' ],\n            [ '#82358F', '#F9E272' ],\n            [ '#8F5435', '#76FA85' ],\n            [ '#906C35', '#74F6C4' ]\n        ]\n\n    }\n\n    componentDidMount() { //Runs after the component has been mounted\n        fetch(`${process.env.REACT_APP_API_LOC}/who-countries`).then((res) => {\n            if (res.ok) {\n                console.log(res);\n                return res.json();\n            }\n        }).then(data => {\n            console.log(data);\n            this.setState(state => ({\n                Countries: data.countries\n            }));\n        });\n    }\n\n    listClick(arg) {\n        console.log(`List click: ${arg}`);\n        fetch(`${process.env.REACT_APP_API_LOC}/worldwide?country=${arg}`).then((res) => {\n            if (res.ok) {\n                console.log(res);\n                return res.json();\n            }\n        }).then(data => {\n            console.log(data);\n            let previouslySelectedCountries = this.state.SelectedCountries;\n            previouslySelectedCountries.push(data.home_data);\n            this.setState(state => ({\n                SelectedCountries: previouslySelectedCountries\n            }));\n\n            console.log(`Selected Countries: ${this.state.SelectedCountries}`);\n            console.log(this.state.SelectedCountries);\n        });    \n    }\n\n    shortenCountryWords(arg) {\n        \n    }\n\n\n\n    render() {\n        return(\n            <Container fluid>\n                <Row>\n                    <Col xs={2}>\n                    <Card className='scrollable' style={{ width: '14rem', height: '50rem', backgroundColor:  '#202B33', color: 'white', borderColor: '#A7FFF4' }}>\n                        <ListGroup  variant=\"flush\">\n                            {\n                                this.state.Countries.map((x) => {\n                                    return <ListGroup.Item style={{ backgroundColor:  '#202B33', color: 'white', borderColor: '#A7FFF4'}} onClick={() => this.listClick(x)}>{x}</ListGroup.Item>\n                                })\n                            }\n                        </ListGroup>\n                        \n                    </Card>\n                    </Col>\n                    <Col xs={10}>\n                        <Container>\n\n                        <Card style={{ width: '60rem', marginBottom: '20px' }}>\n                                <Card.Header as=\"h5\">Key and data</Card.Header>\n                                    <Card.Body>\n                                        <Table striped bordered hover>\n                                            <thead>\n                                                <tr>\n                                                <th>Color</th>\n                                                <th>Country</th>\n                                                <th>Cases</th>\n                                                <th>Deaths</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.state.SelectedCountries.map((country, index) => {\n                                                        return (\n                                                            <tr>\n                                                                <td style={{backgroundColor: this.colors[index + 10][0], color: 'white'}}>{ index + 1 }</td>\n                                                                <td>{ country.Name }</td>\n                                                                <td>{ country[\"Cases - cumulative total\"] }</td>\n                                                                <td>{ country[\"Deaths - cumulative total\"] }</td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </Card.Body>\n                            </Card>\n\n                            <Card style={{ width: '60rem' }}>\n                                <Card.Header as=\"h5\"> Cases Comparison</Card.Header>\n                                    <Card.Body>\n                                        The key with all assosiated colours goes here.\n                                    </Card.Body>\n                                    <Card.Body>\n                                        <Card.Title>Cases Compared</Card.Title>\n                                        {/* domainPadding={{ x : [20, 20] }} */}\n                                        <div style={{padding: '20px' }}>\n                                            <VictoryChart padding={{ left: 80, bottom: 40, right: 20 }} domainPadding={{ x: 50, y: 50 }}>\n                                                <VictoryGroup offset={10}\n                                                >\n                                                    {\n                                                        this.state.SelectedCountries.map((country, index) => {\n                                                            return <VictoryBar style={{ data: { fill: this.colors[index + 10][0] } }} data={[ { x: country.Name, y: country[\"Cases - cumulative total\"] } ]}/>\n                                                        })\n                                                    }\n\n                                                </VictoryGroup>\n                                            </VictoryChart>\n                                        </div>\n                                </Card.Body>\n                            </Card>\n\n                            <Card style={{ width: '60rem', marginTop: '20px' }}>\n                                <Card.Header as=\"h5\">Deaths Comparison</Card.Header>\n                                    <Card.Body>\n                                        The key with all assosiated colours goes here.\n                                    </Card.Body>\n                                    <Card.Body>\n                                        <Card.Title>Deaths Compared</Card.Title>\n                                        <VictoryChart padding={{ left: 80, bottom: 40, right: 20 }} domainPadding={{ x: 50 }}>\n                                            <VictoryGroup offset={20}\n                                            >\n                                                \n                                                {\n                                                    this.state.SelectedCountries.map((country, index) => {\n                                                        return <VictoryBar style={{ data: { fill: this.colors[index + 10][0] } }} data={[{ x: country.Name, y: country[\"Deaths - cumulative total\"]} ]}/>\n                                                    })\n                                                }\n\n                                            </VictoryGroup>\n                                        </VictoryChart>\n                                        \n                                </Card.Body>\n                            </Card>\n                        </Container>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Compare;","// Import CSS.\nimport './App.css'; // Import styings for the application.\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import the bootstrap styles.\n\n// Import React.\nimport React, { Component } from 'react'; // Import react.\n\n// Import My Components.\nimport Default from './Views/Default';\nimport About from './Views/About';\nimport Loading from './Views/Loading';\nimport FindCountry from './Views/FindCountry';\nimport Compare from './Views/Compare';\n\n// Import Bootstrap Components (Import each component ont at a time to save space).\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nclass App extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper (props);\n\t\t// Bind the state handler to the function.\n\t\tthis.handler = this.handler.bind(this);\n\t\tthis.state = { View: 'findCountry', Data: 'null', Home: 'null'}\n\t\n\t\t// This binding is neccessary to make `this` work in the callback\n\t\tthis.handleAboutClick = this.handleAboutClick.bind(this);\n\t\t//this.handleAccountClick = this.handleAccountClick.bind(this);\n\t\tthis.handleCreateClick = this.handleCreateClick.bind(this);\n\t\tthis.handleHomeClick = this.handleHomeClick.bind(this);\n\t\tthis.handleSetHomeClick = this.handleSetHomeClick.bind(this);\n\t\tthis.handleCompareClick = this.handleCompareClick.bind(this);\n\t}\n\n\thandler(arg) {\n\t\tconsole.log(arg);\n\n\t\tthis.setState(state => ({\n\t\t\tView: 'loading',\n\t\t\tHome: arg\n\t\t}), () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tfetch(`${process.env.REACT_APP_API_LOC}/worldwide?country=${this.state.Home}`).then((res) => {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\treturn res.json();\n\t\t\t\t\t}\n\t\t\t\t}).then(data => {\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\tthis.setState(state => ({\n\t\t\t\t\t\tView: 'default',\n\t\t\t\t\t\tData: data\n\t\t\t\t\t}));\n\t\t\t\t\tconsole.log(this.state.Data);\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t});\n\t}\n\t\n\tstateHandler() {\n\t\tthis.setState(state => ({\n\t\t\tView: 'loading'\n\t\t}));\n\t}\n\n\tgetCurrentView() {\n\t\treturn this.state;\n\t}\n\n\thandleNavClick(destination) {\n\t\t// Need to see what the value is:\n\t\tthis.setState(state => ({ // set the state.\n\t\t\tView: 'about'\n\t\t}));\n\t}\n\n\thandleCreateClick() {\n\t\tthis.setState(state => ({\n\t\t\tView: 'create'\n\t\t}));\n\t}\n\t\n\thandleSetHomeClick() {\n\t\tthis.setState(state => ({\n\t\t\tView: 'findCountry'\n\t\t}));\n\t}\n\n\thandleAboutClick() {\n\t\tthis.setState(state => ({\n\t\t\tView: 'about'\n\t\t}));\n\t}\n\n\thandleCompareClick() {\n\t\tthis.setState(state => ({\n\t\t\tView: 'compare'\n\t\t}));\n\t}\n\n\thandleHomeClick() {\n\t\tthis.setState(state => ({\n\t\t\tView: 'default'\n\t\t}));\n\t}\n\n\t\n\trender () {\n\n\t\tlet ui;\n\n\t\tif (this.state.View === 'default') {\n\t\t\tui = <Default data={this.state.Data}/>\n\t\t} else if (this.state.View === 'about') {\n\t\t\tui = <About />\n\t\t} else if (this.state.View === 'loading') {\n\t\t\tui = <Loading />\n\t\t} else if (this.state.View === 'findCountry') {\n\t\t\tui = <FindCountry action={this.handler}/>\n\t\t} else if (this.state.View === 'compare') {\n\t\t\tui = <Compare />\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar style={{ backgroundColor: '#30404D' }} className='text-white'>\n\t\t\t\t\t<Navbar.Brand onClick={this.handleHomeClick}>{() => {\n\t\t\t\t\t\tif (this.state.Home === 'null') {\n\t\t\t\t\t\t\treturn 'G34 Covid Analyser'\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn this.state.Home\n\t\t\t\t\t\t}\n\t\t\t\t\t}}</Navbar.Brand>\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Button style={{ paddingRight: '5px' }} variant=\"primary\" onClick={this.handleCompareClick}>Compare</Button>\n\t\t\t\t\t\t<Button style={{ paddingRight: '5px' }} variant=\"info\" onClick={this.handleAboutClick}>About</Button>\n\t\t\t\t\t\t<Button style={{ paddingRight: '5px' }} variant=\"info\" onClick={this.handleSetHomeClick}>Set Home Country</Button>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar>\n\t\t\t\t\n\t\t\t\t{/* Where the main view of the application is */}\n\t\t\t\t{\n\t\t\t\t\tui\n\t\t\t\t}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}